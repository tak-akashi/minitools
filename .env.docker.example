# Docker環境用 環境変数設定ファイル
# このファイルを .env にコピーして、実際の値を設定してください
# cp .env.docker.example .env

# ========================================
# API Keys and Credentials
# ========================================

# Notion API (https://developers.notion.com/)
NOTION_API_KEY=your_notion_api_key_here

# Notion Database IDs
NOTION_ARXIV_DATABASE_ID=your_arxiv_database_id_here
NOTION_MEDIUM_DATABASE_ID=your_medium_database_id_here
NOTION_GOOGLE_ALERTS_DATABASE_ID=your_google_alerts_database_id_here
NOTION_YOUTUBE_DATABASE_ID=your_youtube_database_id_here

# Slack Webhook URLs (https://api.slack.com/messaging/webhooks)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL
SLACK_ARXIV_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/ARXIV/WEBHOOK
SLACK_MEDIUM_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/MEDIUM/WEBHOOK
SLACK_GOOGLE_ALERTS_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/ALERTS/WEBHOOK

# ========================================
# Docker-specific Settings
# ========================================

# Build target: production or development
# development includes whisper support for YouTube transcription
BUILD_TARGET=production

# Ollama server configuration (handled by docker-compose)
# OLLAMA_HOST is automatically set to http://ollama:11434

# ========================================
# Optional: Override default settings
# ========================================

# Default Ollama models (optional, defaults from settings.yaml)
# OLLAMA_MODEL_TRANSLATION=gemma3:27b
# OLLAMA_MODEL_SUMMARIZATION=gemma3:27b
# OLLAMA_MODEL_YOUTUBE=gemma3:12b

# Processing limits (optional, defaults from settings.yaml)
# MAX_CONCURRENT_ARTICLES=10
# MAX_CONCURRENT_OLLAMA=3
# MAX_CONCURRENT_NOTION=3

# ========================================
# Gmail API Configuration (Required for Medium & Google Alerts)
# ========================================
# 
# IMPORTANT: Docker環境でのGmail認証について
# 
# Docker環境では直接ブラウザ認証ができないため、以下の手順が必要です：
#
# 【推奨方法】ホストマシンで事前認証:
#   1. ホストマシンでminitoolsをインストール: pip install -e . または uv sync
#   2. 一度実行して認証: minitools-google-alerts --hours 1
#   3. ブラウザでGoogleアカウントにログインし、権限を許可
#   4. 生成された token.pickle が自動的にDockerにマウントされます
#
# 【必要なファイル】
#   - credentials.json: Google Cloud ConsoleからダウンロードしたOAuth認証情報
#   - token.pickle: 初回認証後に自動生成される認証トークン（再利用可能）
#
# 詳細な手順は docs/docker-gmail-auth.md を参照してください。
#
# セキュリティ注意: credentials.json と token.pickle は機密情報です。
# Gitにコミットしないでください（.gitignoreに登録済み）